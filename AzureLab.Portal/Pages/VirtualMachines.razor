@page "/virtualmachines"
@using AzureLab.AzureResources.Entities
@using AzureLab.AzureResources.Repositories
@using AzureLab.AzureResources.Utility

<h1>Virtual Machines</h1>

<table id="vm-table">
    <tr>
        <th>Server Name</th>
        <th>IP Address</th>
        <th>Resource Group</th>
        <th>Power State</th>
        <th>Action</th>
    </tr>
    @foreach (var vm in @vmList)
    {

<tr>
    <td><span title="@vm.ResourceId">@vm.Name</span></td>
    <td>@vm.IPAddress</td>
    <td>@vm.ResourceGroupName</td>
    <td>@vm.Status</td>
    @if (vm.Status.Contains("running"))
    {
        <td align="center" valign="middle"><input src="/images/stop-button.png" type="image" @onclick=@(() => StopVM(vm.ResourceGroupName, vm.Name)) /></td>
    }
    else if (vm.Status.Contains("deallocated"))
    {
        <td align="center" valign="middle"><input src="/images/start-button.png" type="image" @onclick=@(() => StartVM(vm.ResourceGroupName, vm.Name)) /></td>
    }
    else
    {
        <td align="center" valign="middle">N/A</td>
    }
    </tr>
    }
</table>

@code {

    private static Platform platform = new Platform(new ServicePrincipal()
    {
        ClientId = "25436b99-13a3-4608-9dd0-1da85a2561bf",
        ClientSecret = "aMsmvGWSd7bwXRxduf=7.g7mD5-IGhQ.",
        TenantId = "10b07eba-f68b-403f-80c3-9c79c513279b"
    });

    private List<VM> vmList = new VMRepository() { Platform = platform }.List().ToList();

    private void StartVM(string resourceGroupName, string vmName)
    {
        platform.StartVM(resourceGroupName, vmName);
    }

    private void StopVM(string resourceGroupName, string vmName)
    {
        platform.StopVM(resourceGroupName, vmName);
    }
}
